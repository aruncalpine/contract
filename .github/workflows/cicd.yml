name: Deploy To Production

on:
  push:
    branches: [develop]
env:
  USERNAME: ubuntu
  REMOTE_FOLDER: ~/websites/contract-registry-frontend-staging

jobs:
  build_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Copy Repo
        uses: actions/checkout@v3
      - uses: actions/setup-node@v1
        with:
          node-version: 16.x
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - run: pwd && node --version && npm --version && npm install next@latest && npm install --save graphql ra-data-graphql && npm i && npm run build  && ls -la &&  ls -la         
      - name: Upload file to bucket
        uses: a-sync/s3-uploader@master
        with:
          args: --recursive
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
          S3_BUCKET: 'contract-registry'
          FILE: ./out   
      
      - name: Copy Files to Remote Host
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{ secrets.STAGING_PRIVATE_KEY }}
        with:
          flags: "-avzr"
          options: "-I"
          ssh_options: ""
          src: ""
          dest: "$USERNAME@${{ secrets.STAGING_HOST }}:$REMOTE_FOLDER"

      - name: Run build and set tags
        uses: fifsky/ssh-action@master
        with:
          command: |
            ls -lrt && pwd 
            cd websites/contract-registry-frontend-staging && cp DevOps/* . && pwd && docker-compose -f docker-compose-staging.yml build --no-cache
          host: ${{ secrets.STAGING_HOST }}
          user: $USERNAME
          key: ${{ secrets.STAGING_PRIVATE_KEY }}
        

      - name: Deploy on Staging Env Host
        uses: fifsky/ssh-action@master
        with:
          command: |
            ls -lrt && pwd 
            cd websites/contract-registry-frontend-staging && cp DevOps/* . && pwd && docker-compose -f docker-compose-staging.yml up -d
            docker image prune -f
          host: ${{ secrets.STAGING_HOST }}
          user: $USERNAME
          key: ${{ secrets.STAGING_PRIVATE_KEY }}

      
